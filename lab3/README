# MLOps: Практическое Задание №3

# Описание
В данном задании было развернуто приложение в контейнере Docker. В соответствии с техническим заданием, это модель логистической регрессии, обученная на датасете ирисов. Приложение принимает запросы через API и возвращает результаты.

# Запуск приложения
Для запуска приложения необходимо перейти в каталог `lab3`.

```bash
cd lab3
./run_app.sh


После выполнения этой команды приложение будет запущено как сервис, используя конфигурацию из docker-compose.yaml и Dockerfile.

Адрес Приложения
После успешного запуска доступ к приложению будет предоставлен по следующему URL:
http://localhost:8000/

Примеры Запросов
Образцы запросов для классификации находятся в каталоге:

/lab3/samples/

Реализованные Эндпоинты
Информационный эндпоинт:

GET /: возвращает краткую информацию об API.
Эндпоинт для классификации ирисов:

POST /predict: отправляет параметры для классификации и возвращает предсказанный класс.
Поэтапный Процесс Сборки и Запуска Контейнера
При создании Docker-образа и запуске контейнера выполняются следующие шаги:

Загружается основной Docker-образ.
Устанавливается рабочая директория.
Копируются файлы приложения в контейнер.
Устанавливаются необходимые зависимости из requirements.txt.
Запускается приложение.
Операции, Выполняемые В Приложении
В процессе выполнения приложение выполняет следующие действия:

Определяет входные параметры для модели.
Загружает датасет.
Сохраняет датасет в формате CSV.
Выполняет предобработку данных.
Обучает модель.
Сохраняет обученную модель в файл.
Ассоциирует индексы с названиями классов.
Создаёт эндпоинт для классификации ирисов.
Создаёт эндпоинт, возвращающий информационное сообщение.
Структура Файлов и Каталогов
Датасет и модель: /lab3/data/
Исходный код приложения: /lab3/src/app.py
Dockerfile для создания образа: /lab3/Dockerfile
Docker Compose файл для запуска сервиса: /lab3/docker-compose.yaml
Примеры запросов: /lab3/samples/


